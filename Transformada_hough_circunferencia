import cv2

def hough_circles(image):
    # Convertir la imagen a escala de grises
    gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

    # Aplicar el detector de bordes Canny
    edges = cv2.Canny(gray_image, 50, 150)

    # Obtener los parámetros de la transformada de Hough
    rho = 1
    theta = 1
    threshold = 100
    min_radius = 5
    max_radius = 100

    # Aplicar la transformada de Hough
    circles = cv2.HoughCircles(edges, cv2.HOUGH_GRADIENT, dp=1, minDist=20, param1=50, param2=30, minRadius=min_radius, maxRadius=max_radius)

    # Devolver las circunferencias detectadas
    return circles

if __name__ == "__main__":
    # Cargar la imagen
    image = cv2.imread("image.jpg")

    # Detectar las circunferencias
    circles = hough_circles(image)

    # Verificar si se detectaron círculos
    if circles is not None:
        # Convertir las coordenadas a enteros y dibujar los círculos
        circles = circles.astype(int)
        for circle in circles[0, :]:
            x, y, radius = circle
            cv2.circle(image, (x, y), radius, (0, 255, 0), 2)

        # Mostrar la imagen original junto con las circunferencias detectadas
        cv2.imshow("Image with Circles", image)
        cv2.waitKey(0)
        cv2.destroyAllWindows()
    else:
        print("No se detectaron círculos en la imagen.")
